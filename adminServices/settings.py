"""
Django settings for ev_chargingapp_backend project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
import mimetypes

# importing environ library

from datetime import timedelta
from decouple import config

# from azure.monitor.opentelemetry import configure_azure_monitor

# Building paths inside the project

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = config("DJANGO_APP_SECRET_KEY")
DJANGO_APP_AZURE_FUNCTION_CRON_JOB_SECRET = config("DJANGO_APP_AZURE_FUNCTION_CRON_JOB_SECRET")

GOOGLE_MAPS_API_KEY = config("DJANGO_APP_GOOGLE_API_KEY")
# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = False

# ALLOWED_HOSTS = ["*"]
CORS_ALLOW_ALL_ORIGINS = True

ALLOWED_HOSTS = ["*",
    config("DJANGO_APP_ADMIN_BASE_URL"),
    config("DJANGO_APP_BLOB_STORAGE_URL"),
    config("DJANGO_APP_SWARCO_BASE_URL"),
    config("DJANGO_APP_CDN_BASE_URL"),
    config("DJANGO_APP_EV_DATABASE_BEV_URL"),
    config("DJANGO_APP_EV_DATABASE_PHEV_URL"),
    config("DJANGO_APP_EV_DVLA_SEARCH_BASE_URL"),
    config("DJANGO_APP_DRIIVZ_BASE_URL"),
    config("DJANGO_APP_PAYTER_BASE_URL"),
    config("DJANGO_APP_SQUARE_APP_URL"),
    config("DJANGO_APP_API_CDN_URL"),
    config("DJANGO_APP_API_AD_AUTHORITY_URL"),
    config("DJANGO_APP_FCM_AUTH_URI"),
    config("DJANGO_APP_API_STATION_FINDER"),
    config("DJANGO_APP_API_AD_SCOPE"),
    config("DJANGO_AZURE_INSIGHTS_INGESTION_ENDPOINT"),
    config("DJANGO_AZURE_INSIGHTS_LIVE_ENDPOINT"),
    config("DJANGO_APP_NODE_BACKEND_URL"),
    config("DJANGO_APP_CONTACTLESS_BACKEND_URL"),
    config("DJANGO_APP_API_URL"),
    config("DJANGO_APP_ADMIN_DEFAULT_DOMAIN_URL"),
    config("DJANGO_APP_HEALTH_CHECK_ADMIN_URL"),
]
 
CSRF_TRUSTED_ORIGINS = [config("DJANGO_APP_CONTACTLESS_BACKEND_URL")]

SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# Configure OpenTelemetry to use Azure Monitor with the specified connection string

# configure_azure_monitor(
#     connection_string=(
#         f"InstrumentationKey={config('DJANGO_AZURE_INSIGHTS_INSTRUMENTATION_KEY')};"
#         + "IngestionEndpoint=https://ukwest-0.in.applicationinsights.azure.com/;"
#         + "LiveEndpoint=https://ukwest.livediagnostics.monitor.azure.com/"
#     )
# )

import traceback

try:
    print("Trying to configure Azure Monitor instrumentation...")
    from azure.monitor.opentelemetry import configure_azure_monitor
    configure_azure_monitor(
    connection_string=(
        f"InstrumentationKey={config('DJANGO_AZURE_INSIGHTS_INSTRUMENTATION_KEY')};"
        + "IngestionEndpoint=https://ukwest-0.in.applicationinsights.azure.com/;"
        + "LiveEndpoint=https://ukwest.livediagnostics.monitor.azure.com/;"+
        f"ApplicationId={config('DJANGO_AZURE_INSIGHTS_APPLICATION_ID')}"
    )
)
    print("Azure Monitor instrumentation configured successfully.")
except Exception as e:
    print("Failed to configure Azure Monitor instrumentation.")
    print("Error:", e)
    print("Full traceback:")
    traceback.print_exc()

APPLICATION_INSIGHTS = {
    "ikey": config("DJANGO_AZURE_INSIGHTS_INSTRUMENTATION_KEY"),
}

# Application definition


INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.humanize",
    "adminServices.auths",
    "adminServices.stations",
    "adminServices.promotions",
    "adminServices.dashboard",
    "adminServices.reviews",
    "adminServices.reconciliation",
    "adminServices.configurations",
    "adminServices.user_management",
    "adminServices.session_transactions",
    "adminServices.loyalty",
    "adminServices.contactless",
    "adminServices.e_wallet",
    "adminServices.audit_trail",
    "adminServices.app_users",
    "adminServices.three_ds_config",
    "rest_framework",
    "sharedServices",
    "storages",
    "adminServices.notifications",
    "django_ckeditor_5",
]

MIDDLEWARE = [
    "applicationinsights.django.middleware.ApplicationInsightsMiddleware",
    "sharedServices.middleware.OpenTelemetryMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "csp.middleware.CSPMiddleware",
]

ROOT_URLCONF = "adminServices.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "adminServices.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases


DATABASES = {
    "default": {
        "ENGINE": config("DJANGO_APP_ENGINE"),
        "HOST": config("DJANGO_APP_HOST"),
        "PORT": config("DJANGO_APP_PORT"),
        "NAME": config("DJANGO_APP_NAME"),
        "USER": config("DJANGO_APP_USER"),
        "PASSWORD": config("DJANGO_APP_PASSWORD"),
        "OPTIONS": {
            "driver": config("DJANGO_APP_DRIVER"),
            "unicode_results": True,
        },
    },
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators


AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation."
        "UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation." "MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation." "CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation." "NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/


LANGUAGE_CODE = "en-us"

TIME_ZONE = "Europe/London"

USE_I18N = True

USE_L10N = True

USE_TZ = True

DATA_UPLOAD_MAX_NUMBER_FIELDS = 5040
DATA_UPLOAD_MAX_MEMORY_SIZE = 10242880

# STATIC_URL = "/static/"


STATIC_ROOT = os.path.join(BASE_DIR, "static")

# MEDIA_URL = "/images/"


STATICFILES_DIRS = [os.path.join(BASE_DIR, "adminServices", "static")]

MEDIA_ROOT = os.path.join(BASE_DIR, "adminServices\\static\\images")

DEFAULT_FILE_STORAGE = "sharedServices.create_azure.AzureMediaStorage"
STATICFILES_STORAGE = "sharedServices.create_azure.AzureStaticStorage"

STATIC_LOCATION = "static"
MEDIA_LOCATION = "media"
AZURE_ACCOUNT_NAME = config("DJANGO_APP_AZURE_APP_NAME")

AZURE_CUSTOM_DOMAIN = f"{AZURE_ACCOUNT_NAME}.blob.core.windows.net"
STATIC_URL = f"https://{AZURE_CUSTOM_DOMAIN}/{STATIC_LOCATION}/"
MEDIA_URL = f"https://{AZURE_CUSTOM_DOMAIN}/{MEDIA_LOCATION}/"

STATIC_ROOT = STATIC_URL
MEDIA_ROOT = MEDIA_URL


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field


DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Cache time to live is 15 minutes.

CACHE_TTL = 60 * 60
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "rediss://"
        + config("DJANGO_APP_AZURE_REDIS_HOST")
        + ":"
        + config("DJANGO_APP_AZURE_REDIS_PORT")
        + "/",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": config("DJANGO_APP_AZURE_REDIS_PASSWORD"),
        },
        "KEY_PREFIX": "admin",
    }
}

SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"
JWT_AUTH = {
    "JWT_ENCODE_HANDLER": "rest_framework_jwt.utils.jwt_encode_handler",
    "JWT_DECODE_HANDLER": "rest_framework_jwt.utils.jwt_decode_handler",
    "JWT_PAYLOAD_HANDLER": "rest_framework_jwt.utils.jwt_payload_handler",
    "JWT_PAYLOAD_GET_USER_ID_HANDLER": "rest_framework_jwt.utils."
    "jwt_get_user_id_from_"
    "payload_handler",
    "JWT_RESPONSE_PAYLOAD_HANDLER": "rest_framework_jwt.utils."
    "jwt_response_payload_handler",
    "JWT_SECRET_KEY": "SECRET_KEY",
    "JWT_GET_USER_SECRET_KEY": None,
    "JWT_PUBLIC_KEY": None,
    "JWT_PRIVATE_KEY": None,
    "JWT_ALGORITHM": "HS256",
    "JWT_VERIFY": True,
    "JWT_VERIFY_EXPIRATION": True,
    "JWT_LEEWAY": 0,
    "JWT_EXPIRATION_DELTA": timedelta(days=30),
    "JWT_AUDIENCE": None,
    "JWT_ISSUER": None,
    "JWT_ALLOW_REFRESH": False,
    "JWT_REFRESH_EXPIRATION_DELTA": timedelta(days=30),
    "JWT_AUTH_HEADER_PREFIX": "Bearer",
    "JWT_AUTH_COOKIE": None,
}


DATA_UPLOAD_MAX_NUMBER_FIELDS = 15040

CKEDITOR_UPLOAD_PATH = f"https://{AZURE_CUSTOM_DOMAIN}/static/ckeditor/ckeditor/"

customColorPalette = [
    {"color": "hsl(4, 90%, 58%)", "label": "Red"},
    {"color": "hsl(340, 82%, 52%)", "label": "Pink"},
    {"color": "hsl(291, 64%, 42%)", "label": "Purple"},
    {"color": "hsl(262, 52%, 47%)", "label": "Deep Purple"},
    {"color": "hsl(231, 48%, 48%)", "label": "Indigo"},
    {"color": "hsl(207, 90%, 54%)", "label": "Blue"},
]

CKEDITOR_5_CONFIGS = {
    "default": {
        "toolbar": [
            "sourceEditing",
            "|",
            "bold",
            "italic",
            "underline",
            "strikethrough",
            "subscript",
            "superscript",
            "|",
            "alignment",
            "horizontalLine",
            "|",
            "bulletedList",
            "numberedList",
            "outdent",
            "indent",
            "|",
            "insertTable",
            "imageInsert",
            "link",
            "blockQuote",
            "code",
            "codeBlock",
            "math",
            "|",
            "undo",
            "redo",
            "heading",
        ],
    },
    "extends": {
        "blockToolbar": [
            "paragraph",
            "heading1",
            "heading2",
            "heading3",
            "|",
            "bulletedList",
            "numberedList",
            "|",
            "blockQuote",
        ],
        "toolbar": [
            "heading",
            "|",
            "outdent",
            "indent",
            "|",
            "bold",
            "italic",
            "link",
            "underline",
            "strikethrough",
            "code",
            "subscript",
            "superscript",
            "highlight",
            "|",
            "codeBlock",
            "sourceEditing",
            "insertImage",
            "bulletedList",
            "numberedList",
            "todoList",
            "|",
            "blockQuote",
            "imageUpload",
            "|",
            "fontSize",
            "fontFamily",
            "fontColor",
            "fontBackgroundColor",
            "mediaEmbed",
            "removeFormat",
            "insertTable",
        ],
        "image": {
            "toolbar": [
                "imageTextAlternative",
                "|",
                "imageStyle:alignLeft",
                "imageStyle:alignRight",
                "imageStyle:alignCenter",
                "imageStyle:side",
                "|",
            ],
            "styles": [
                "full",
                "side",
                "alignLeft",
                "alignRight",
                "alignCenter",
            ],
        },
        "table": {
            "contentToolbar": [
                "tableColumn",
                "tableRow",
                "mergeTableCells",
                "tableProperties",
                "tableCellProperties",
            ],
            "tableProperties": {
                "borderColors": customColorPalette,
                "backgroundColors": customColorPalette,
            },
            "tableCellProperties": {
                "borderColors": customColorPalette,
                "backgroundColors": customColorPalette,
            },
        },
        "heading": {
            "options": [
                {
                    "model": "paragraph",
                    "title": "Paragraph",
                    "class": "ck-heading_paragraph",
                },
                {
                    "model": "heading1",
                    "view": "h1",
                    "title": "Heading 1",
                    "class": "ck-heading_heading1",
                },
                {
                    "model": "heading2",
                    "view": "h2",
                    "title": "Heading 2",
                    "class": "ck-heading_heading2",
                },
                {
                    "model": "heading3",
                    "view": "h3",
                    "title": "Heading 3",
                    "class": "ck-heading_heading3",
                },
            ]
        },
    },
    "list": {
        "properties": {
            "styles": "true",
            "startIndex": "true",
            "reversed": "true",
        }
    },
}


# allow text/javascript type for javascript files

mimetypes.add_type("text/javascript", ".js", True)

REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": ("rest_framework.renderers.JSONRenderer",),
}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "{name} {levelname} {asctime} {module} {process:d} {thread:d} {message}",
            "style": "{",
        },
        "simple": {
            "format": "%(asctime)s | %(levelname)s | %(message)s",
        },
    },
    "handlers": {
        "stdout": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["stdout"],
        },
    },
}

# Cross-Domain Misconfiguration
CORS_ALLOWED_ORIGINS = [
    config("DJANGO_APP_ADMIN_BASE_URL"),
    config("DJANGO_APP_BLOB_STORAGE_URL"),
    config("DJANGO_APP_SWARCO_BASE_URL"),
    config("DJANGO_APP_CDN_BASE_URL"),
    config("DJANGO_APP_EV_DATABASE_BEV_URL"),
    config("DJANGO_APP_EV_DATABASE_PHEV_URL"),
    config("DJANGO_APP_EV_DVLA_SEARCH_BASE_URL"),
    config("DJANGO_APP_DRIIVZ_BASE_URL"),
    config("DJANGO_APP_PAYTER_BASE_URL"),
    config("DJANGO_APP_SQUARE_APP_URL"),
    config("DJANGO_APP_API_CDN_URL"),
    config("DJANGO_APP_API_AD_AUTHORITY_URL"),
    config("DJANGO_APP_FCM_AUTH_URI"),
    config("DJANGO_APP_API_STATION_FINDER"),
    config("DJANGO_APP_API_AD_SCOPE"),
    config("DJANGO_AZURE_INSIGHTS_INGESTION_ENDPOINT"),
    config("DJANGO_AZURE_INSIGHTS_LIVE_ENDPOINT"),
    config("DJANGO_APP_NODE_BACKEND_URL"),
    config("DJANGO_APP_CONTACTLESS_BACKEND_URL"),
    config("DJANGO_APP_API_URL"),
    config("DJANGO_APP_ADMIN_DEFAULT_DOMAIN_URL")
]


X_FRAME_OPTIONS = "DENY"  # Missing Anti-clickjacking Header

# Content Security Policy (CSP) for Default fallback

CSP_DEFAULT_SRC = ("'none'",)

# Content Security Policy (CSP) for image src


CSP_IMG_SRC = ("*", "data:")

# Content Security Policy (CSP) for script src

CSP_SCRIPT_SRC = (
    "'self'",
    "'unsafe-inline'",
    config("DJANGO_APP_ADMIN_BASE_URL"),
    config("DJANGO_APP_BLOB_STORAGE_URL_FOR_SECURITY"),
    "mfgevqastorage.blob.core.windows.net",
    "cdnjs.cloudflare.com",
    "maxcdn.bootstrapcdn.com",
    "code.jquery.com",
    "stackpath.bootstrapcdn.com",
    "ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js",
    "ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js",
    "ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js",
    "ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js",
    "cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js",
    "maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js",
    "code.jquery.com/ui/1.12.1/jquery-ui.js",
    "cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.1/highlight.min.js",
    "buttons.github.io/buttons.js",
    "cdn.jsdelivr.net",
    "maps.googleapis.com",
    "unpkg.com",
    "https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js'",
)

# Content Security Policy (CSP) for stylesheet src

CSP_STYLE_SRC = (
    "'self'",
    "'unsafe-inline'",
    config("DJANGO_APP_ADMIN_BASE_URL"),
    config("DJANGO_APP_BLOB_STORAGE_URL_FOR_SECURITY"),
    "ajax.googleapis.com",
    "cdn.jsdelivr.net",
    "stackpath.bootstrapcdn.com",
    "stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css",
    "cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5.15.3/css/fontawesome.min.css",
    "cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css",
    "cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css",
    "cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css",
    "ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/ui-lightness/jquery-ui.css",
    "fonts.gstatic.com",
    "cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css",
    "stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css",
    "unpkg.com/@trevoreyre/autocomplete-js/dist/style.css",
    "cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.1/styles/default.min.css",
    "fonts.googleapis.com",
    "ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js",
)

# Content Security Policy (CSP) for font style src

CSP_FONT_SRC = (
    "'self'",
    "'unsafe-inline'",
    config("DJANGO_APP_BLOB_STORAGE_URL_FOR_SECURITY"),
    "fonts.gstatic.com",
    "fonts.googleapis.com",
    "cdnjs.cloudflare.com",
)


CSP_CONNECT_SRC = (
    "'self'",
    config("DJANGO_APP_ADMIN_BASE_URL"),
    "maps.googleapis.com",
    "accounts.google.com",
)

# #Strict-Transport-Security Header

SECURE_HSTS_SECONDS = 31536000  # One year in seconds
SECURE_HSTS_INCLUDE_SUBDOMAINS = True

# X-Content-Type-Options Header Missing

X_CONTENT_TYPE_OPTIONS = "nosniff"

# Set Secure flag for session cookies

SESSION_COOKIE_SECURE = True

# Set HttpOnly flag for session cookies

SESSION_COOKIE_HTTPONLY = True

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# Set SameSite attribute for session cookies

SESSION_COOKIE_SAMESITE = "Lax"

SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True

# AWS SQS Configuration
SQS_QUEUE_URL = config("DJANGO_APP_SQS_QUEUE_URL")
AWS_REGION = config("DJANGO_APP_AWS_REGION")
AWS_ACCESS_KEY_ID = config("DJANGO_APP_AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = config("DJANGO_APP_AWS_SECRET_ACCESS_KEY")
