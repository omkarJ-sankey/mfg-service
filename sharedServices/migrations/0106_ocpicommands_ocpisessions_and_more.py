# Generated by Django 5.0.9 on 2025-05-23 13:06

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sharedServices', '0105_alter_tokens_type_cdrtoken_session_chargingperiod'),
    ]

    operations = [
        migrations.CreateModel(
            name='OCPICommands',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('command', models.CharField(choices=[('UNLOCK_CONNECTOR', 'UNLOCK_CONNECTOR'), ('RESERVE_NOW', 'RESERVE_NOW'), ('START_SESSION', 'START_SESSION'), ('STOP_SESSION', 'STOP_SESSION'), ('CANCEL_RESERVATION', 'CANCEL_RESERVATION')], max_length=50)),
                ('request_payload', models.JSONField(blank=True, null=True)),
                ('response_payload', models.JSONField(blank=True, null=True)),
                ('command_exec_payload', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OCPISessions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('session_id', models.CharField(blank=True, max_length=36, null=True)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('kwh', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('auth_method', models.CharField(blank=True, choices=[('AUTH_REQUEST', 'AUTH_REQUEST'), ('COMMAND', 'COMMAND'), ('WHITELIST', 'WHITELIST')], max_length=20, null=True)),
                ('authorization_reference', models.CharField(blank=True, max_length=36, null=True)),
                ('cdr_token', models.TextField(blank=True, null=True)),
                ('meter_id', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.CharField(blank=True, max_length=3, null=True)),
                ('total_cost_incl', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('total_cost_excl', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('COMPLETED', 'COMPLETED'), ('INVALID', 'INVALID'), ('PENDING', 'PENDING'), ('RESERVATION', 'RESERVATION')], max_length=20, null=True)),
                ('charging_periods', models.JSONField(blank=True, null=True)),
                ('user_account_number', models.IntegerField(blank=True, null=True)),
                ('user_card_number', models.CharField(blank=True, max_length=500, null=True)),
                ('emp_session_id', models.CharField(blank=True, max_length=500, null=True, unique=True)),
                ('charging_session_id', models.CharField(blank=True, max_length=500, null=True, unique=True)),
                ('charging_authorization_status', models.CharField(blank=True, max_length=500, null=True)),
                ('session_status', models.CharField(blank=True, choices=[('start', 'start'), ('running', 'running'), ('rejected', 'rejected'), ('stopped', 'stopped'), ('closed', 'closed'), ('completed', 'completed')], max_length=100)),
                ('payment_id', models.CharField(max_length=1000, null=True)),
                ('paid_status', models.CharField(blank=True, choices=[('paid', 'paid'), ('unpaid', 'unpaid'), ('refunded', 'refunded')], default='unpaid', max_length=100)),
                ('payment_method', models.CharField(max_length=100, null=True)),
                ('payment_response', models.TextField(blank=True, null=True)),
                ('charging_data', models.TextField(blank=True, null=True)),
                ('user_mail', models.BinaryField(blank=True, max_length='max', null=True)),
                ('mail_status', models.CharField(blank=True, choices=[('pending', 'pending'), ('sent', 'sent')], default='pending', max_length=100)),
                ('feedback', models.CharField(blank=True, max_length=500, null=True)),
                ('rating', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('back_office', models.CharField(blank=True, max_length=30, null=True)),
                ('is_reviewed', models.CharField(blank=True, choices=[('Admin', 'Admin'), ('App', 'App')], default='App', max_length=100, null=True)),
                ('is_force_stopped', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=100, null=True)),
                ('is_refund_initiated', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=100, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('payment_completed_at', models.DateTimeField(blank=True, null=True)),
                ('preauth_status', models.CharField(max_length=100, null=True)),
                ('preauth_collected_by', models.CharField(max_length=100, null=True)),
                ('session_tariff', models.CharField(blank=True, max_length=30, null=True)),
                ('payment_type', models.CharField(max_length=100, null=True)),
                ('deducted_voucher_amount', models.CharField(blank=True, max_length=20, null=True)),
                ('country_code', models.CharField(max_length=2)),
                ('party_id', models.CharField(max_length=3)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('connector_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sharedServices.connector')),
                ('evse_uid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sharedServices.evse')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location', to='sharedServices.location')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ocpi_user_charging_sessions', related_query_name='ocpi_user_charging_sessions', to='sharedServices.mfguserev')),
            ],
            options={
                'db_table': 'sharedServices_ocpisessions',
                'indexes': [models.Index(fields=['emp_session_id'], name='ocpisessionidindexes'), models.Index(fields=['end_time'], name='ocpiosessionendtimeindexes')],
            },
        ),
        migrations.AddConstraint(
            model_name='ocpisessions',
            constraint=models.UniqueConstraint(fields=('location_id', 'session_id'), name='unique_location_id_session_id'),
        ),
    ]
